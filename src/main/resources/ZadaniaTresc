Zadanie 1
Stwórz listę Integerów. Wykonaj zadania:
- dodaj do listy 5 elementów ze scannera
- dodaj do listy 5 elementów losowych
- wypisz elementy
Sprawdź działanie aplikacji.

Zadanie2
Stwórz oddzielnego maina, a w nim kolejną listę integerów. Wykonaj zadania:
- dodaj do listy 10 liczb losowych
- oblicz sumę elementów na liście (wypisz ją)
- oblicz średnią elementów na liście (wypisz ją)
- podaj medianę elementów na liście (wypisz ją)
- znajdź największy oraz najmniejszy element na liście (znajdź go posługując się pętlą for)
- wypisz indeks elementu
- znajdź największy oraz najmniejszy element na liście (znajdź go pętlą for, a następnie
określ index posługując się metodą indexOf)
Sprawdź działanie aplikacji.

Zadanie3
Stwórz oddzielnego maina, a w nim kolejną listę String'ów. Wykonaj zadania:
- dodaj do listy elementy 10030, 3004, 4000, 12355, 12222, 67888, 111200, 225355,
2222, 1111, 3546, 138751, 235912 (jako stringi) (dodaj je posługując się metodą
Arrays.asList())
- określ indeks elementu 138751 posługując się metodą indexOf
- sprawdź czy istnieje na liście obiekt 67888 metodą contains (wynik wypisz na ekran)
- sprawdź czy istnieje na liście obiekkt 67889 metodą contains (wynik wypisz na ekran)
- usuń z listy obiekt 67888 oraz 67889 (metoda remove)
- wykonaj ponownie powyższe sprawdzenia.
- iteruj całą listę, wypisz elementy na ekran (a. w jednej linii, b. każdy element w
oddzielnej linii).
Sprawdź działanie aplikacji.

Zadanie4
Stwórz oddzielnego maina, a w nim kolejną listę String'ów. Wykonaj zadania:
- dodaj do listy losowe 100 elementów z zakresu 0-100.
- oblicz średnią liczb
- usuń wszystkie liczby powyżej średniej
- wypisz wszystkie liczby
- wykonaj kopię listy do tablicy
Sprawdź działanie aplikacji.

Zadanie5
Stwórz aplikację, a w niej klasę Dziennik. Stwórz również klasę Student. Klasa Student
powinna:
- posiadać listę ocen studenta (List<Double>)
- posiadać (pole) numer indeksu studenta
- posiadać (pole) imię studenta
- posiadać (pole) nazwisko studenta
Dziennik powinna:
- posiadać (jako pole) listę Studentów.
- posiadać metodę 'dodajStudenta(Student):void' do dodawania nowego studenta do
dziennika
- posiadać metodę 'usuńStudenta(Student):void' do usuwania studenta
- posiadać metodę 'usuńStudenta(int):void' do usuwania studenta po jego numerze w
liście
- posiadać metodę 'zwróćStudenta(int):Student' która jako parametr przyjmuje numer
studenta, a w wyniku zwraca konkretnego studenta.
- posiadać metodę 'podajŚredniąStudenta(int):double' która przyjmuje indeks studenta i
zwraca średnią ocen studenta.
- posiadać metodę 'podajStudentówZagrożonych():List<Student>'

Zadanie6
6.Napisz klasę person, która ma pola: firstName, lastName, age oraz isMale.
Mając listę osób i korzystając ze streamów:
a) uzyskaj listę mężczyzn
b) uzyskaj listę dorosłych kobiet
c) uzyskaj Optional<Person> z dorosłym Jackiem
d) uzyskaj listę wszystkich nazwisk osób, które są w przedziale wiekowym: 15-19
e)* uzyskaj sumę wieku wszystkich osób
f)* uzyskaj średnią wieku wszystkich mężczyzn
g)** znajdź nastarszą osobę w liście